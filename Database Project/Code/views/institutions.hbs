<!--
	This page creates the UI for the `Institutions` entity that stores data on all publications in the database.

	Code citation:
		Dr. Michael Curry. 2022. 
		"Step 4 - Dynamically Displaying Data". 
		"Step 5 - Adding New Data".
		"Step 6 - Dynamically Filling Dropdowns and Adding a Search Box".
		"Step 8 - Dynamically Updating Data".
		[Source code] https://github.com/osu-cs340-ecampus/nodejs-starter-app/. URL
-->

<h1>Institutions</h1>

<!-- Display the navigation bar to visit other pages. -->
<nav>
	<a href="/">Index</a>
	<a href="/research_papers">Research Papers</a>
	<a href="/citations">Citations</a>
	<a href="/authors">Authors</a>
	<a href="/research_papers_has_authors">Publications (All)</a>
	<a href="/institutions">Institutions</a>
	<a href="/disciplines">Disciplines</a>
</nav>

<!-- Lines 27-50 (Curry) -->
<table id="institutions-table">

	{{! For the first row, print each key of the row object as a header cell to
	know what each column means when the page renders. }}
	<thead>
		<tr>
			{{#each data.[0]}}
			<th>
				{{@key}}
			</th>
			{{/each}}
		</tr>
	</thead>

	<tbody>
		{{#each data}}
		<tr>

			{{! For each row, print the `institution_id`, `name`, `address`,
			`country`, and `website`. }}
			<td>{{this.InstitutionId}}</td>
			<td>{{this.Name}}</td>
			<td>{{this.Address}}</td>
			<td>{{this.Country}}</td>
			<td>{{this.Website}}</td>

			<!-- Create a DELETE operation button for each attribute displayed. -->
			<td><button onclick="deleteInstitution({{this.InstitutionId}})">Delete</button></td>

		</tr>
		{{/each}}
	</tbody>
</table>

<div class = "container">
<!-- Create a form to add new institutions with asynchronous JavaScript and XML (AJAX). -->
<div>
<h2>Add Institution</h2>
<p>Complete the forms below.</p>

<!-- Lines 59-96 (Curry) -->
<form id="add-institution-form-ajax">

	<!-- Create the input for the `name` constraint. -->
	<label for="input-name">Name: </label>
	<input type="text" name="input-name" id="input-name" required/>

	<!-- Create the input for the `address` constraint. -->
	<label for="input-address">Address: </label>
	<input type="text" name="input-address" id="input-address" required/>

	<!-- Create the input for the `country` constraint. -->
	<label for="input-country">Country: </label>
	<input type="text" name="input-country" id="input-country" required/>

	<!-- Create the input for the `website` constraint. -->
	<label for="input-website">Website: </label>
	<input type="text" name="input-website" id="input-website" required/>

	<input type="submit" />
</form></div>

<!-- Create a form to update existing research papers with AJAX. -->
<div>
<h2>Update Institution</h2>
<p>Choose an existing institution.</p>

<!-- Lines 103-151 (Curry) -->
<form id="update-institution-form-ajax">

	<!-- Create a dropdown menu linking `institution_id` to its `name` constraint. -->
	<label for="input-institution">Institution: </label>
	<select name="input-institution" id="institutionSelect" required>
		<option value="">Select an Institution</option>
		{{#each data}}
		<option value="{{this.InstitutionId}}">{{this.Name}}</option>
		{{/each}}
	</select>

	<!-- Create the input for the new `title` constraint. -->
	<label for="input-name">Name: </label>
	<input type="text" name="input-name" id="input-name_update" required/>

	<!-- Create the input for the new `addressed` constraint. -->
	<label for="input-address">Address: </label>
	<input type="text" name="input-address" id="input-address_update" required/>

	<!-- Create the input for the new `country` constraint. -->
	<label for="input-country">Country: </label>
	<input type="text" name="input-country" id="input-country_update" required/>

	<!-- Create the input for the new `website` constraint. -->
	<label for="input-website">Website: </label>
	<input type="text" name="input-website" id="input-website_update" required/>
	<input type="submit"/>
</form></div></div>

<script src="./js/add_institution.js"></script>
<script src="./js/update_institution.js"></script>
<script src="./js/delete_institution.js"></script>